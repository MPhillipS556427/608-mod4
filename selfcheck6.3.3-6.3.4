Last login: Fri Sep  9 23:34:18 on ttys003
(base) malcolmphillip@Malcolms-MacBook-Air 608-mod4 % ipython
Python 3.9.12 (main, Jun  1 2022, 06:36:29) 
Type 'copyright', 'credits' or 'license' for more information
IPython 8.4.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: colors = {'red','orange','yellow','green','red','blue'}

In [2]: colors
Out[2]: {'blue', 'green', 'orange', 'red', 'yellow'}

In [3]: len(colors)
Out[3]: 5

In [4]: 'red' in colors
Out[4]: True

In [5]: 'purple' in colors
Out[5]: False

In [6]: 'purple' not in colors
Out[6]: True

In [7]: 'green' in colors
Out[7]: True

In [8]: for color in colors:
   ...:     print(color.upper(), end = ' ')
   ...: 
RED BLUE ORANGE GREEN YELLOW 
In [9]: numbers = list(range(10)) + list(range(5))

In [10]: numbers
Out[10]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4]

In [11]: set(numbers)
Out[11]: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

In [12]: set()
Out[12]: set()

In [13]: text = 'to be or not to be that is the question'

In [14]: unique_words = set(text.split())

In [15]: for word in sorted(unique_words):
    ...:     print(word, end = ' ')
    ...: 
be is not or question that the to 
In [16]: print ('6.3 Completed')
6.3 Completed

In [17]: {1, 3, 5} == {3, 5, 1}
Out[17]: True

In [18]: {1, 3, 5} !== {3, 5, 1}
  Input In [18]
    {1, 3, 5} !== {3, 5, 1}
                ^
SyntaxError: invalid syntax


In [19]: {1, 3, 5} != {3, 5, 1}
Out[19]: False

In [20]: {1, 3, 5} < {3, 5, 1}
Out[20]: False

In [21]: {1, 3, 5} < {7, 3, 5, 1}
Out[21]: True

In [22]: {1, 3, 5} <= {3, 5, 1}
Out[22]: True

In [23]: {1, 3} <= {3, 5, 1}
Out[23]: True

In [24]: {1, 3, 5}.issubset({3, 5, 1})
Out[24]: True

In [25]: {1, 2}.issubset({3, 5, 1})
Out[25]: False

In [26]: {1, 3, 5} > {3, 5, 1}
Out[26]: False

In [27]: {1, 3, 5, 7} > {3, 5, 1}
Out[27]: True

In [28]: {1, 3, 5} >= {3, 5, 1}
Out[28]: True

In [29]: {1, 3, 5} >= {3, 1}
Out[29]: True

In [30]: {1, 3} >= {3, 1, 7}
Out[30]: False

In [31]: {1, 3, 5}.issuperset({3, 5, 1})
Out[31]: True

In [32]: {1, 3, 5}.issuperset({3, 2})
Out[32]: False

In [33]: set('abc def ghi jkl mno ').issuperset('hi mom')
Out[33]: True

In [34]: {1, 3, 5} | {2, 3, 4}
Out[34]: {1, 2, 3, 4, 5}

In [35]: {1, 3, 5} .union([20, 20, 40, 40])
Out[35]: {1, 3, 5, 20, 40}

In [36]: {1, 3, 5} & {2, 3, 4}
Out[36]: {3}

In [37]: {1, 3, 5}.intersection([1, 2, 2, 3, 3, 4, 4])
Out[37]: {1, 3}

In [38]: {1, 3, 5}-{2, 3, 4}
Out[38]: {1, 5}

In [39]: {1, 3, 5} - {2, 3, 4}
Out[39]: {1, 5}

In [40]: {1, 3, 5, 7}.difference([2, 2, 3, 3, 4, 4])
Out[40]: {1, 5, 7}

In [41]: {1, 3, 5} ^ {2, 3, 4}
Out[41]: {1, 2, 4, 5}

In [42]: {1, 3, 5, 7}.symetric_difference([2, 2, 3, 3, 4, 4])
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Input In [42], in <cell line: 1>()
----> 1 {1, 3, 5, 7}.symetric_difference([2, 2, 3, 3, 4, 4])

AttributeError: 'set' object has no attribute 'symetric_difference'

In [43]: {1, 3, 5, 7}.symmetric_difference([2, 2, 3, 3, 4, 4])
Out[43]: {1, 2, 4, 5, 7}

In [44]: {1, 3, 5}.isthisjoint({2, 4, 6})
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Input In [44], in <cell line: 1>()
----> 1 {1, 3, 5}.isthisjoint({2, 4, 6})

AttributeError: 'set' object has no attribute 'isthisjoint'

In [45]: {1, 3, 5}.isdisjoint({2, 4, 6})
Out[45]: True

In [46]: {1, 3, 5}.isdisjoint({4, 6, 1})
Out[46]: False

In [47]: {10, 20, 30} - {5, 10, 15, 20}
Out[47]: {30}

In [48]: {10, 20, 30} ^ {5, 10, 20, 30}
Out[48]: {5}

In [49]: {10, 20, 30} ^ {5, 10, 15, 20}
Out[49]: {5, 15, 30}

In [50]: {10, 20, 30} | {5, 10, 15, 20}
Out[50]: {5, 10, 15, 20, 30}

In [51]: {10, 20, 30} & {5, 10, 15, 20}
Out[51]: {10, 20}

In [52]: print('6.3.2 self check completed by Malcolm PHillip")
  Input In [52]
    print('6.3.2 self check completed by Malcolm PHillip")
                                                          ^
SyntaxError: EOL while scanning string literal


In [53]: print('6.3.2 self check completed by Malcolm PHillip')
6.3.2 self check completed by Malcolm PHillip

In [54]: numbers = {1, 3, 5}

In [55]: numbers |= {2, 3, 4}

In [56]: numbers
Out[56]: {1, 2, 3, 4, 5}

In [57]: numbers.update(range(10))

In [58]: numbers
Out[58]: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

In [59]: numbers.add(17)

In [60]: numbers.add(3)

In [61]: numbers
Out[61]: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17}

In [62]: numbers.remove(3)

In [63]: numbers
Out[63]: {0, 1, 2, 4, 5, 6, 7, 8, 9, 17}

In [64]: numbers.pop()
Out[64]: 0

In [65]: numbers
Out[65]: {1, 2, 4, 5, 6, 7, 8, 9, 17}

In [66]: numbers.clear()

In [67]: numbers
Out[67]: set()

In [68]: numbers = [1, 2, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 10]

In [69]: evens = {item for item in numbers if item %2 == 0}

In [70]: evens
Out[70]: {2, 4, 6, 8, 10}

In [71]: print('6.3.3 and 6.3.4 self check completed by Malcolm PHillip')
6.3.3 and 6.3.4 self check completed by Malcolm PHillip

In [72]: exit
(base) malcolmphillip@Malcolms-MacBook-Air 608-mod4 % savelog selfcheck_6.3.3
zsh: command not found: savelog
(base) malcolmphillip@Malcolms-MacBook-Air 608-mod4 % 
